"""–§—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞"""

import os

import asyncio
from dotenv import load_dotenv
import aiohttp
from pyrogram import Client
from pyrogram.types import (
    InlineKeyboardButton,
    InlineKeyboardMarkup)

import config

load_dotenv()

POSTS_URL = os.getenv('POSTS_URL')


async def get_post_and_count(number: int) -> tuple[dict, int]:
    """–ü–æ–ª—É—á–∞–µ–º –∏–∑ API –ø–æ—Å—Ç –ø–æ –Ω–æ–º–µ—Ä—É –∏ –æ–±—â–µ–µ —á–∏—Å–ª–æ –ø–æ—Å—Ç–æ–≤"""

    async with aiohttp.ClientSession() as session:

        # –ü–æ–ª—É—á–∞–µ–º JSON —Å –ø–æ—Å—Ç–æ–º –ø–æ –Ω–æ–º–µ—Ä—É
        post_task = asyncio.ensure_future(
            session.get(f'{POSTS_URL}/{number}')
        )

        # –ü–æ–ª—É—á–∞–µ–º JSON —Å–æ –≤—Å–µ–º–∏ –ø–æ—Å—Ç–∞–º–∏
        all_posts_task = asyncio.ensure_future(
            session.get(POSTS_URL)
        )

        post_response, all_posts_response = await asyncio.gather(
            post_task,
            all_posts_task,
        )

        post = await post_response.json()
        all_posts = await all_posts_response.json()

    return post, len(all_posts)


async def update_post(app: Client, chat_id: int,
                      message_id: int, number: int = 1) -> None:
    """–°–æ–∑–¥–∞–µ–º –ø–æ—Å—Ç –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ"""

    keyboard = []
    post, all_posts_count = await get_post_and_count(number)

    formatted_post = await config.create_post_text(post, all_posts_count)


    # –ì—Ä–∞–Ω–∏—á–Ω–æ–µ —É—Å–ª–æ–≤–∏–µ —á—Ç–æ–±—ã –Ω–µ –≤—ã–π—Ç–∏ –∑–∞ –Ω–∏–∂–Ω–∏–π –ø—Ä–µ–¥–µ–ª –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
    if number > 1:
        keyboard.append(InlineKeyboardButton(
            'üëà',
            callback_data=str(number - 1)
        ))

    # –ì—Ä–∞–Ω–∏—á–Ω–æ–µ —É—Å–ª–æ–≤–∏–µ —á—Ç–æ–±—ã –Ω–µ –≤—ã–π—Ç–∏ –∑–∞ –≤–µ—Ä—Ö–Ω–∏–π –ø—Ä–µ–¥–µ–ª –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
    if number < all_posts_count:
        keyboard.append(InlineKeyboardButton(
            'üëâ',
            callback_data=str(number + 1)
        ))


    # –ù–∞–≥—Ä–∞–¥–∞ –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ –¥–æ—à–µ–ª
    if number == 100:

        confetti = await app.send_message(chat_id, 'üéâ')
        await asyncio.sleep(5)
        await confetti.delete()

    await app.edit_message_text(
        chat_id, message_id,
        text=formatted_post,
        reply_markup=InlineKeyboardMarkup([keyboard])
    )
